Content.makeFrontInterface(600, 600);



// We need to create & initialise the network via script, the scriptnode node will then reference
// the existing network
const var nn = Engine.createNeuralNetwork("Sine");

// This contains the JSON data from `Scripts/Python/sine_model.json`
const var obj = {"layers": "SineModel(\n  (network): Sequential(\n    (0): Linear(in_features=1, out_features=8, bias=True)\n    (1): Tanh()\n    (2): Linear(in_features=8, out_features=4, bias=True)\n    (3): Tanh()\n    (4): Linear(in_features=4, out_features=1, bias=True)\n  )\n)", "weights": {"network.0.weight": [[1.046385407447815], [1.4178084135055542], [0.9530450105667114], [1.1184123754501343], [-2.0036938190460205], [1.4853519201278687], [-1.323277235031128], [-1.4824397563934326]], "network.0.bias": [-0.44855356216430664, -1.284180760383606, 1.995141625404358, -1.0365474224090576, 0.29263046383857727, 0.47701799869537354, 0.3244697153568268, 0.4108103811740875], "network.2.weight": [[-1.7912973165512085, -0.3762974143028259, -0.3934035897254944, 0.15961132943630219, 0.5510663390159607, -1.115586280822754, 0.678738534450531, 1.3274309635162354], [0.34134334325790405, 1.8660730123519897, -0.21752844750881195, 2.568317174911499, 0.37973126769065857, -0.18469078838825226, 0.04422684758901596, -0.0883311927318573], [0.3113365173339844, 0.8516308069229126, -0.6042391061782837, 0.9669480919837952, -1.354665994644165, 0.12340979278087616, -1.171357274055481, -0.9616029858589172], [-0.5073869824409485, -0.7385743856430054, 0.31184449791908264, -0.9642266035079956, 1.899434208869934, -0.14977189898490906, 1.6841320991516113, 0.895214855670929]], "network.2.bias": [-0.6971003413200378, 0.3228396475315094, -0.6209602355957031, 0.18162713944911957], "network.4.weight": [[-0.9233435988426208, 1.1081478595733643, -0.8966623544692993, 0.394584596157074]], "network.4.bias": [0.06727132201194763]}};

// load the sine wave approximator network
nn.loadPytorchModel(obj);
function onNoteOn()
{
	
}
 function onNoteOff()
{
	
}
 function onController()
{
	
}
 function onTimer()
{
	
}
 function onControl(number, value)
{
	
}
 